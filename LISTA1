#EXERCIOS VETOR IF

-----------------------------------------------------------------------------------
1 EXERCICIO 
#include <stdio.h>

// Função para calcular a soma dos elementos do vetor
int calcularSomaVetor(int vetor[], int tamanho) {
    int soma = 0;
    for (int i = 0; i < tamanho; i++) {
        soma += vetor[i];
    }
    return soma;
}

int main() {
    int N;
    int vetor[100];

    // Leitura do tamanho N do vetor
    printf("Digite o tamanho do vetor (até 100): ");
    scanf("%d", &N);

    // Verificação do limite do vetor
    if (N <= 0 || N > 100) {
        printf("Tamanho do vetor inválido. Deve estar entre 1 e 100.\n");
        return 1;
    }

    // Leitura ou geração dos elementos do vetor
    printf("Digite %d elementos inteiros:\n", N);
    for (int i = 0; i < N; i++) {
        scanf("%d", &vetor[i]);
    }

    // Chamada da função para calcular a soma dos elementos do vetor
    int soma = calcularSomaVetor(vetor, N);

    // Exibição do resultado
    printf("A soma dos elementos do vetor é: %d\n", soma);

    return 0;
}

------------------------------------------------------------------------------------------------
2 EXERCICIO

#include <stdio.h>

// Função para encontrar o menor elemento do vetor
float encontrarMenor(float vetor[], int tamanho) {
    float menor = vetor[0];
    for (int i = 1; i < tamanho; i++) {
        if (vetor[i] < menor) {
            menor = vetor[i];
        }
    }
    return menor;
}

int main() {
    int n;
    printf("Digite o tamanho do vetor: ");
    scanf("%d", &n);

    if (n <= 0) {
        printf("Tamanho inválido do vetor.\n");
        return 1;
    }

    float vetor[n];
    printf("Digite os %d elementos do vetor:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%f", &vetor[i]);
    }

    printf("Vetor informado: ");
    for (int i = 0; i < n; i++) {
        printf("%.2f ", vetor[i]);
    }

    float menorElemento = encontrarMenor(vetor, n);
    printf("\nO menor elemento do vetor é: %.2f\n", menorElemento);

    return 0;
}
--------------------------------------------------------------------------------------------------
3 exercicio
#include <stdio.h>

// Função para encontrar o maior elemento do vetor
float encontrarMaior(float vetor[], int tamanho) {
    float maior = vetor[0];
    for (int i = 1; i < tamanho; i++) {
        if (vetor[i] > maior) {
            maior = vetor[i];
        }
    }
    return maior;
}

int main() {
    int n;
    printf("Digite o tamanho do vetor: ");
    scanf("%d", &n);

    if (n <= 0) {
        printf("Tamanho inválido do vetor.\n");
        return 1;
    }

    float vetor[n];
    printf("Digite os %d elementos do vetor:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%f", &vetor[i]);
    }

    printf("Vetor informado: ");
    for (int i = 0; i < n; i++) {
        printf("%.2f ", vetor[i]);
    }

    float maiorElemento = encontrarMaior(vetor, n);
    printf("\nO maior elemento do vetor é: %.2f\n", maiorElemento);

    return 0;
}
------------------------------------------------------------------------------------------------
4 exercicio
#include <stdio.h>

// Função para contar quantos valores ímpares existem no vetor
int contarImpares(int vetor[], int tamanho) {
    int contador = 0;
    for (int i = 0; i < tamanho; i++) {
        if (vetor[i] % 2 != 0) {
            contador++;
        }
    }
    return contador;
}

int main() {
    int n;
    printf("Digite o tamanho do vetor: ");
    scanf("%d", &n);

    if (n <= 0) {
        printf("Tamanho inválido do vetor.\n");
        return 1;
    }

    int vetor[n];
    printf("Digite os %d elementos do vetor:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &vetor[i]);
    }

    printf("Vetor informado: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", vetor[i]);
    }

    int qtdImpares = contarImpares(vetor, n);
    printf("\nA quantidade de valores ímpares no vetor é: %d\n", qtdImpares);

    return 0;
}
------------------------------------------------------------------------------------------
5 exercicio


